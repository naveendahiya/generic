CDev : Git
CTesting : Selenium, testNG, RestAssured
CI : Jenkins
CDeployment: Config management(maintain functional and performance requirement, 
             releasing deployments, update servers, maintain config updates for each server), 
             
             Dockerization
CMonitoring: 

Git

git config --global user.name "dahiya, naveen"
git config --global user.email "a@b.com"
git config --list

git help
git help <command> : git help rebase

git init
git status
git add .
git add --all
git commit -m "message"

git log
git log --author="a@b.com"
git log --author="Naveen Dahiya"

git workflow:
Working area : local files, which are not yet added[git add]
Staging area : after [git add <filename>], this file is in staging area
Repository : after [git commit], files are in repository

git diff : changes between staging and local
git diff -staged : diff between staging and repository

git remote add origin "remoteUrl"

git commit --ammend -m "corrected commit message"

This will keep the changes tracked in all files, just reset the head to mentioned commitId position
git reset --soft commitId

Jenkins:
brew install jenkins
To have launchd start jenkins now and restart at login:
  brew services start jenkins
Or, if you don't want/need a background service you can just run:
  jenkins

Create users:
Manage Jenkins--> Manager users

Role-based Authorization Strategy : This get installed initially if you allow jenkins to install commonly used plugins
Manage Jenkins--> Manage plugins : confirm here

